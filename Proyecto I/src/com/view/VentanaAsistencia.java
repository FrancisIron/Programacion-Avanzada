/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.modelo.Alumno;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gamer
 */
public class VentanaAsistencia extends javax.swing.JFrame {

    private VentanaCurso verC;
    private Alumno a;

    public VentanaAsistencia(Alumno a, VentanaCurso verC) {
        this.a = a;
        this.verC = verC;
        initComponents();
        crearTabla();
        listeners();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
		botonCambiar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
			
			public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
		
		botonCambiar.setText("Cambiar");
        botonCambiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCambiarActionPerformed(evt);
            }
        });	

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(botonCambiar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
				.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCambiar)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

	 private void botonCambiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCambiarActionPerformed
             int pos = jTable1.getSelectedRow();
             if (pos!=-1) {
                 Boolean bln = a.getAsistenciaClases().get(pos).booleanValue();                 
                 if (bln == true) {
                     bln = false;
                     a.modificarAsistencia(pos, bln);
                 } else {
                     bln = true;
                     a.modificarAsistencia(pos, bln);
                 }
                 crearTabla();
             } else {
                 JOptionPane.showMessageDialog(null, "Selecione una anotación", "Error", JOptionPane.ERROR_MESSAGE);
             }
    }//GEN-LAST:event_botonCambiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton botonCambiar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    public void listeners() {
        this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                verC.setVisible(true);
                VentanaAsistencia.this.dispose();
            }
        });
    }

    public void crearTabla() {
        String[] fila = new String[]{"Día", "Contenido"};
        String[][] columna = new String[a.getAsistenciaClases().size()][2];
        int cont = 0;
        String state = "";
        for (int i = 0; i < a.getAsistenciaClases().size(); i++) {
            columna[cont][0] = "Día " + (i + 1);
            if (a.getAsistenciaClases().get(i).booleanValue() == true) {
                state = "Asistio";
            } else {
                state = "No asistio";
            }
            columna[cont][1] = state;
            cont++;
        }
        jTable1.setModel(new DefaultTableModel(columna, fila));
    }
}
